name: Terraform & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
          project_id: 'sonic-totem-416019'
          credentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.27.0/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t waskylala/terracicd:latest .
          docker push waskylala/terracicd:latest

      - name: Apply Kubernetes Resources
        run: terraform apply -auto-approve

      - name: Wait for API Deployment
        run: |
          kubectl rollout status deployment/api-deployment

      - name: Test API Endpoint
        run: |
          # Wait until the LoadBalancer service is assigned an external IP
          until [[ "$(kubectl get svc api-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" != "" ]]; do
            echo "Waiting for LoadBalancer IP..."
            sleep 30
          done

          # Get the external IP of the LoadBalancer
          EXTERNAL_IP=$(kubectl get svc api-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

          # Test the API endpoint
          curl -s -o /dev/null -w "%{http_code}" http://$EXTERNAL_IP | grep "200"
